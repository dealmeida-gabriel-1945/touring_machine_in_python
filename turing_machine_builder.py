from turing_machine import Turing_Machine
from state import State


def create_mt_01():
    q0 = State('q0', {
        '0': ('q1', 'X', 'R'),
        '1': None,
        'X': None,
        'Y': ('q3', 'Y', 'R'),
        'B': None,
    }, True, False)

    q1 = State('q1', {
        '0': ('q1', '0', 'R'),
        '1': ('q2', 'Y', 'L'),
        'X': None,
        'Y': ('q1', 'Y', 'R'),
        'B': None,
    }, False, False)

    q2 = State('q2', {
        '0': ('q2', '0', 'L'),
        '1': None,
        'X': ('q0', 'X', 'R'),
        'Y': ('q2', 'Y', 'L'),
        'B': None,
    }, False, False)

    q3 = State('q3', {
        '0': None,
        '1': None,
        'X': None,
        'Y': ('q3', 'Y', 'R'),
        'B': ('q4', 'B', 'R'),
    }, False, False)

    q4 = State('q4', {
        '0': None,
        '1': None,
        'X': None,
        'Y': None,
        'B': None,
    }, False, True)

    my_states = {
        'q0': q0,
        'q1': q1,
        'q2': q2,
        'q3': q3,
        'q4': q4
    }

    mt = Turing_Machine(
        my_states,
        ['0', '1'],
        ['0', '1', 'B', 'X', 'Y'],
        my_states['q0'],
        'B',
        [my_states['q4']],
        id='0^n 1^n -> GENERATED BY TURING MACHINE BUILDER'
    )

    return mt